services:
  db:
    image: mysql:8.0
    container_name: db-bloc
    environment:
      MYSQL_DATABASE: bloc
      MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
    ports:
      - "3310:3306"
    volumes:
      - db-storage:/var/lib/mysql
    networks:
      - bloc-net
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost"]
      interval: 12s
      retries: 5

  api-service:
    image: bloc-api:latest  # ✅ corrigé ici
    container_name: bloc-api
    depends_on:
      db:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/bloc?useSSL=false&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: ''
    ports:
      - "9090:8086"
    networks:
      - bloc-net

  nexus:
    image: sonatype/nexus3
    container_name: nexus
    ports:
      - "8081:8081"
    volumes:
      - nexus-data:/nexus-data
    networks:
      - bloc-net
    environment:
      - INSTALL4J_ADD_VM_PARAMS=-Xms512m -Xmx1024m -XX:MaxDirectMemorySize=2G

  sonarqube:
    image: sonarqube:community
    container_name: sonarqube
    ports:
      - "9000:9000"
    environment:
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
      - SONAR_JDBC_URL=jdbc:postgresql://sonar-db:5432/sonar
      - SONAR_JDBC_USERNAME=sonar
      - SONAR_JDBC_PASSWORD=sonar
    depends_on:
      - sonar-db
    networks:
      - bloc-net

  sonar-db:
    image: postgres:13
    container_name: sonar-db
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
      - POSTGRES_DB=sonar
    volumes:
      - sonar-db-data:/var/lib/postgresql/data
    networks:
      - bloc-net

networks:
  bloc-net:
    driver: bridge

volumes:
  db-storage:
  nexus-data:
  sonar-db-data:
